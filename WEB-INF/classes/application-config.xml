<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:p="http://www.springframework.org/schema/p"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:aop="http://www.springframework.org/schema/aop"
xmlns:tx="http://www.springframework.org/schema/tx"
xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-4.0.xsd">

<context:property-placeholder location="classpath:redisConfig.properties"/>
 <!-- c3p0数据源的配置   需要配置下面的数据，不然会导致8小时后没用过 出现错误-->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver"/>
		<property name="jdbcUrl" value="jdbc:mysql:///wwl"/>
		<property name="user" value="root"/>
		<property name="password" value="123456"/>
		<!-- 指定连接池中保留的最大连接数. Default:15 -->
		<property name="maxPoolSize" value="20"/>
        <!-- 指定连接池中保留的最小连接数-->
        <property name="minPoolSize" value="5"/>
        <!-- 指定连接池的初始化连接数  取值应在minPoolSize 与 maxPoolSize 之间.Default:3-->
		<property name="initialPoolSize" value="8"/>
        <!-- 最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。 Default:0-->
		<property name="maxIdleTime" value="120"/>
        <!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数. Default:3-->
		<property name="acquireIncrement" value="3"></property>
        <!-- 每60秒检查所有连接池中的空闲连接.Default:0 -->
 		<property name="idleConnectionTestPeriod" value="60"/>
	</bean>
	
	<!-- mybatis和spring的数据源连接驱动整合 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<!-- 加载mybatis的全局配置文件 -->
         <property name="configLocation" value="classpath:mybatis-config.xml"/>
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.wwl.mapper"/>
	</bean>
	<!--============================== 配置注解事务的开始  两步 ============================= -->
	<!-- 配置事务管理器,管理数据源事务处理-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 开启事务注解生效  需注入事务管理器-->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<!--============================== 配置事务的end  ============================= -->
	
	<!-- 配置SessionTemplate，已封装了繁琐的数据操作-->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>		
	</bean>
	
	<!-- redis 的配置 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="30"/>
		<property name="minIdle" value="10"/>
		<property name="maxTotal" value="50"/>
	</bean>
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig"/>
		<constructor-arg index="1" value="${host}" type="java.lang.String"/>
		<constructor-arg index="2" value="${port}" type="int"/>
	</bean>
	
</beans>
